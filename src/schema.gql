# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Role {
  id: String!
  name: String!
  roles: [User!]!
}

type User {
  id: String!
  email: String!
  roles: [Role!]!
}

type Session {
  accessToken: String!
}

type Moods {
  nature: Int!
  relax: Int!
  history: Int!
  culture: Int!
  party: Int!
}

type Tour {
  id: String!
  name: String!
  startingDate: Timestamp!
  endingDate: Timestamp!
  price: Int!
}

"""
`Date` type as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

type Travel {
  id: String!
  isPublic: Boolean!
  slug: String!
  name: String!
  description: String!
  numberOfDays: Int!
  moods: Moods!
  tours: [Tour!]!
}

type Query {
  user(id: String!): User
  users: [User!]!
  me: User
  travels(findTravelsInput: FindTravelsInput): [Travel!]!
  travel(id: String!): Travel!
  tours(findToursInput: FindToursInput): [Tour!]!
  tour(id: String!): Tour!
}

input FindTravelsInput {
  skip: Int
  take: Int
}

input FindToursInput {
  travelSlug: String!
  priceFrom: Int
  priceTo: Int
  startingDate: Timestamp
  endingDate: Timestamp
  skip: Int
  sortByPriceAsc: Boolean
  take: Int
}

type Mutation {
  login(input: LoginInput!): Session
  createUser(input: CreateUserInput!): User
  createTravel(createTravelInput: CreateTravelInput!): Travel!
  updateTravel(updateTravelInput: UpdateTravelInput!): Travel!
  removeTravel(id: String!): Travel!
  createTour(travelId: String!, createTourInput: CreateTourInput!): Tour!
  updateTour(updateTourInput: UpdateTourInput!): Tour!
  removeTour(id: String!): Tour!
}

input LoginInput {
  email: String!
  password: String!
}

input CreateUserInput {
  email: String!
  password: String!
  roles: [String!]!
}

input CreateTravelInput {
  isPublic: Boolean!
  slug: String!
  name: String!
  description: String!
  numberOfDays: Int!
  moods: MoodsInput!
}

input MoodsInput {
  nature: Int!
  relax: Int!
  history: Int!
  culture: Int!
  party: Int!
}

input UpdateTravelInput {
  isPublic: Boolean
  slug: String
  name: String
  description: String
  numberOfDays: Int
  moods: MoodsInput
  id: String!
}

input CreateTourInput {
  name: String!
  startingDate: Timestamp!
  endingDate: Timestamp!
  price: Int!
}

input UpdateTourInput {
  name: String
  startingDate: Timestamp
  endingDate: Timestamp
  price: Int
  id: String!
}